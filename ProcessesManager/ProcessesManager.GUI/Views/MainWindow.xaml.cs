using ProcessesManager.GUI.ViewModels;
using ProcessManager.Core.Models;
using System;
using System.Collections.Generic;
using System.Windows;
using System.Windows.Controls;

namespace ProcessesManager.GUI.Views
{
    /// <summary>
    /// Логика взаимодействия для MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        MainViewModel Vm
        {
            get
            {
                return (MainViewModel)DataContext;
            }
        }
        public MainWindow()
        {
            InitializeComponent();

        }

        private void DataGrid_AutoGeneratingColumn(object sender, DataGridAutoGeneratingColumnEventArgs e)
        {
            DataTemplate template = null;

            if (e.PropertyType.IsAssignableFrom(typeof(IEnumerable<ReportProcess>)))
                template = (DataTemplate)Resources["ProcessCollectionTemplate"];
            else if (e.PropertyType.IsAssignableFrom(typeof(ReportProcess)))
                template = (DataTemplate)Resources["ProcessTemplate"];

            if (template != null)
            {
                var col = new DataGridProcessContainerColumn();
                col.Binding = (e.Column as DataGridBoundColumn).Binding;
                col.ContentTemplate = template;
                col.Header = e.Column.Header;
                e.Column = col;
            }
        }

        private void DataGrid_AutoGeneratedColumns(object sender, EventArgs e)
        {
            if (sender is DataGrid grid)
            {
                foreach (var column in grid.Columns)
                {
                    if (column.DisplayIndex == 0)
                        column.Width = 50;
                    else if (column.DisplayIndex == 1 || column.DisplayIndex == grid.Columns.Count - 1)
                        column.Width = 200;
                    else
                        column.Width = 100;
                }
            }
        }
    }
}
